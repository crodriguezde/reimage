[ 2022-04-25T15:19:33     INFO ] logging to applications insights
[ 2022-04-25T15:19:40     INFO ] [ resource_group_exists    ] True
[ 2022-04-25T15:19:40     INFO ] [ resource_group_get       ] {'additional_properties': {}, 'id': '/subscriptions/b698965a-1f53-45ec-8b81-58458d1b25f7/resourceGroups/VMSSReImageRun1SOUTHCENTRALUS', 'name': 'VMSSReImageRun1SOUTHCENTRALUS', 'type': 'Microsoft.Resources/resourceGroups', 'properties': <azure.mgmt.resource.resources.v2021_04_01.models._models_py3.ResourceGroupProperties object at 0x7f506c95eac0>, 'location': 'southcentralus', 'managed_by': None, 'tags': None}
[ 2022-04-25T15:19:42     INFO ] [ storage_account_create   ] {'additional_properties': {}, 'id': '/subscriptions/b698965a-1f53-45ec-8b81-58458d1b25f7/resourceGroups/VMSSReImageRun1SOUTHCENTRALUS/providers/Microsoft.Storage/storageAccounts/vmsspipeline9fc2a6bc', 'name': 'vmsspipeline9fc2a6bc', 'type': 'Microsoft.Storage/storageAccounts', 'tags': {'confidentiality': 'public'}, 'location': 'southcentralus', 'sku': <azure.mgmt.storage.v2021_09_01.models._models_py3.Sku object at 0x7f506c7936a0>, 'kind': 'StorageV2', 'identity': None, 'extended_location': None, 'provisioning_state': 'Succeeded', 'primary_endpoints': <azure.mgmt.storage.v2021_09_01.models._models_py3.Endpoints object at 0x7f506c7934c0>, 'primary_location': 'southcentralus', 'status_of_primary': 'available', 'last_geo_failover_time': None, 'secondary_location': None, 'status_of_secondary': None, 'creation_time': datetime.datetime(2022, 4, 25, 19, 24, 0, 17796, tzinfo=<isodate.tzinfo.Utc object at 0x7f506f86ca00>), 'custom_domain': None, 'sas_policy': None, 'key_policy': None, 'key_creation_time': <azure.mgmt.storage.v2021_09_01.models._models_py3.KeyCreationTime object at 0x7f506c793460>, 'secondary_endpoints': None, 'encryption': <azure.mgmt.storage.v2021_09_01.models._models_py3.Encryption object at 0x7f506c793be0>, 'access_tier': 'Hot', 'azure_files_identity_based_authentication': None, 'enable_https_traffic_only': True, 'network_rule_set': <azure.mgmt.storage.v2021_09_01.models._models_py3.NetworkRuleSet object at 0x7f506c7937c0>, 'is_sftp_enabled': None, 'is_local_user_enabled': None, 'is_hns_enabled': None, 'geo_replication_stats': None, 'failover_in_progress': None, 'large_file_shares_state': None, 'private_endpoint_connections': [], 'routing_preference': None, 'blob_restore_status': None, 'allow_blob_public_access': True, 'minimum_tls_version': 'TLS1_0', 'allow_shared_key_access': None, 'enable_nfs_v3': None, 'allow_cross_tenant_replication': None, 'default_to_o_auth_authentication': None, 'public_network_access': None, 'immutable_storage_with_versioning': None, 'allowed_copy_scope': None, 'storage_account_sku_conversion_status': None, 'dns_endpoint_type': None}
[ 2022-04-25T15:19:42     INFO ] [ network_security_group_get ] {'additional_properties': {}, 'id': '/subscriptions/b698965a-1f53-45ec-8b81-58458d1b25f7/resourceGroups/VMSSReImageRun1SOUTHCENTRALUS/providers/Microsoft.Network/networkSecurityGroups/vmssPipeline-nsg', 'name': 'vmssPipeline-nsg', 'type': 'Microsoft.Network/networkSecurityGroups', 'location': 'southcentralus', 'tags': {'confidentiality': 'public'}, 'etag': 'W/"269f4d2e-2e3a-4ed2-8efc-473fede06572"', 'security_rules': [<azure.mgmt.network.v2021_05_01.models._models_py3.SecurityRule object at 0x7f506c15e730>], 'default_security_rules': [<azure.mgmt.network.v2021_05_01.models._models_py3.SecurityRule object at 0x7f506c15e610>, <azure.mgmt.network.v2021_05_01.models._models_py3.SecurityRule object at 0x7f506c15e850>, <azure.mgmt.network.v2021_05_01.models._models_py3.SecurityRule object at 0x7f506c15e880>, <azure.mgmt.network.v2021_05_01.models._models_py3.SecurityRule object at 0x7f506c15e8b0>, <azure.mgmt.network.v2021_05_01.models._models_py3.SecurityRule object at 0x7f506c15e8e0>, <azure.mgmt.network.v2021_05_01.models._models_py3.SecurityRule object at 0x7f506c15e910>], 'network_interfaces': None, 'subnets': [<azure.mgmt.network.v2021_05_01.models._models_py3.Subnet object at 0x7f506c15e970>], 'flow_logs': None, 'resource_guid': 'b572cc61-5074-4eed-9606-418d2c961519', 'provisioning_state': 'Succeeded'}
[ 2022-04-25T15:19:43     INFO ] [ vnet_get                 ] {'additional_properties': {}, 'id': '/subscriptions/b698965a-1f53-45ec-8b81-58458d1b25f7/resourceGroups/VMSSReImageRun1SOUTHCENTRALUS/providers/Microsoft.Network/virtualNetworks/vmssPipeline-vnet', 'name': 'vmssPipeline-vnet', 'type': 'Microsoft.Network/virtualNetworks', 'location': 'southcentralus', 'tags': {'confidentiality': 'public'}, 'extended_location': None, 'etag': 'W/"15c2e556-3bb1-45fb-8f41-66c6e168d3b6"', 'address_space': <azure.mgmt.network.v2021_05_01.models._models_py3.AddressSpace object at 0x7f506c15eac0>, 'dhcp_options': None, 'flow_timeout_in_minutes': None, 'subnets': [<azure.mgmt.network.v2021_05_01.models._models_py3.Subnet object at 0x7f506c15ebb0>], 'virtual_network_peerings': [], 'resource_guid': 'd416ceab-7f08-46cd-b438-5d8a629cb0bd', 'provisioning_state': 'Succeeded', 'enable_ddos_protection': False, 'enable_vm_protection': None, 'ddos_protection_plan': None, 'bgp_communities': None, 'encryption': None, 'ip_allocations': None}
[ 2022-04-25T15:19:43     INFO ] [ subnets_list             ] <iterator object azure.core.paging.ItemPaged at 0x7f506c789190>
[ 2022-04-25T15:19:44     INFO ] [ vmss_get                 ] {'additional_properties': {}, 'id': '/subscriptions/b698965a-1f53-45ec-8b81-58458d1b25f7/resourceGroups/VMSSReImageRun1SOUTHCENTRALUS/providers/Microsoft.Compute/virtualMachineScaleSets/vmssPipeline', 'name': 'vmssPipeline', 'type': 'Microsoft.Compute/virtualMachineScaleSets', 'location': 'southcentralus', 'tags': {'confidentiality': 'public'}, 'sku': <azure.mgmt.compute.v2021_11_01.models._models_py3.Sku object at 0x7f505fe00f70>, 'plan': None, 'identity': None, 'zones': ['1'], 'extended_location': None, 'upgrade_policy': None, 'automatic_repairs_policy': None, 'virtual_machine_profile': <azure.mgmt.compute.v2021_11_01.models._models_py3.VirtualMachineScaleSetVMProfile object at 0x7f505fe124c0>, 'provisioning_state': 'Succeeded', 'overprovision': None, 'do_not_run_extensions_on_overprovisioned_v_ms': None, 'unique_id': '7975f358-73fa-4f0e-9118-9cdb3108b7ee', 'single_placement_group': False, 'zone_balance': None, 'platform_fault_domain_count': 1, 'proximity_placement_group': None, 'host_group': None, 'additional_capabilities': None, 'scale_in_policy': None, 'orchestration_mode': 'Flexible', 'spot_restore_policy': None, 'time_created': datetime.datetime(2022, 4, 25, 19, 27, 51, 241598, tzinfo=<FixedOffset '+00:00'>)}
[ 2022-04-25T15:19:44     INFO ] [ vmss_get_vms             ] <iterator object azure.core.paging.ItemPaged at 0x7f505fe00a30>
[ 2022-04-25T15:20:15     INFO ] [ imds_get_subfd           ] {'additional_properties': {}, 'value': [<azure.mgmt.compute.v2021_11_01.models._models_py3.InstanceViewStatus object at 0x7f506c789850>]}
[ 2022-04-25T15:20:15     INFO ] {'additional_properties': {}, 'code': 'ProvisioningState/succeeded', 'level': 'Info', 'display_status': 'Provisioning succeeded', 'message': 'Enable succeeded: \n[stdout]\nxy-tlsauthtype <type> TLS authentication type for HTTPS proxy\n     --proxy-tlspassword <string> TLS password for HTTPS proxy\n     --proxy-tlsuser <name> TLS username for HTTPS proxy\n     --proxy-tlsv1   Use TLSv1 for HTTPS proxy\n -U, --proxy-user <user:password> Proxy user and password\n     --proxy1.0 <host[:port]> Use HTTP/1.0 proxy on given port\n -p, --proxytunnel   Operate through a HTTP proxy tunnel (using CONNECT)\n     --pubkey <key>  SSH Public key file name\n -Q, --quote         Send command(s) to server before transfer\n     --random-file <file> File for reading random data from\n -r, --range <range> Retrieve only the bytes within RANGE\n     --raw           Do HTTP "raw"; no transfer decoding\n -e, --referer <URL> Referrer URL\n -J, --remote-header-name Use the header-provided filename\n -O, --remote-name   Write output to a file named as the remote file\n     --remote-name-all Use the remote file name for all URLs\n -R, --remote-time   Set the remote file\'s time on the local output\n -X, --request <command> Specify request command to use\n     --request-target Specify the target for this request\n     --resolve <host:port:address> Resolve the host+port to this address\n     --retry <num>   Retry request if transient problems occur\n     --retry-connrefused Retry on connection refused (use with --retry)\n     --retry-delay <seconds> Wait time between retries\n     --retry-max-time <seconds> Retry only within this period\n     --sasl-ir       Enable initial response in SASL authentication\n     --service-name <name> SPNEGO service name\n -S, --show-error    Show error even when -s is used\n -s, --silent        Silent mode\n     --socks4 <host[:port]> SOCKS4 proxy on given host + port\n     --socks4a <host[:port]> SOCKS4a proxy on given host + port\n     --socks5 <host[:port]> SOCKS5 proxy on given host + port\n     --socks5-basic  Enable username/password auth for SOCKS5 proxies\n     --socks5-gssapi Enable GSS-API auth for SOCKS5 proxies\n     --socks5-gssapi-nec Compatibility with NEC SOCKS5 server\n     --socks5-gssapi-service <name> SOCKS5 proxy service name for GSS-API\n     --socks5-hostname <host[:port]> SOCKS5 proxy, pass host name to proxy\n -Y, --speed-limit <speed> Stop transfers slower than this\n -y, --speed-time <seconds> Trigger \'speed-limit\' abort after this time\n     --ssl           Try SSL/TLS\n     --ssl-allow-beast Allow security flaw to improve interop\n     --ssl-no-revoke Disable cert revocation checks (WinSSL)\n     --ssl-reqd      Require SSL/TLS\n -2, --sslv2         Use SSLv2\n -3, --sslv3         Use SSLv3\n     --stderr        Where to redirect stderr\n     --suppress-connect-headers Suppress proxy CONNECT response headers\n     --tcp-fastopen  Use TCP Fast Open\n     --tcp-nodelay   Use the TCP_NODELAY option\n -t, --telnet-option <opt=val> Set telnet option\n     --tftp-blksize <value> Set TFTP BLKSIZE option\n     --tftp-no-options Do not send any TFTP options\n -z, --time-cond <time> Transfer based on a time condition\n     --tls-max <VERSION> Use TLSv1.0 or greater\n     --tlsauthtype <type> TLS authentication type\n     --tlspassword   TLS password\n     --tlsuser <name> TLS user name\n -1, --tlsv1         Use TLSv1.0 or greater\n     --tlsv1.0       Use TLSv1.0\n     --tlsv1.1       Use TLSv1.1\n     --tlsv1.2       Use TLSv1.2\n     --tlsv1.3       Use TLSv1.3\n     --tr-encoding   Request compressed transfer encoding\n     --trace <file>  Write a debug trace to FILE\n     --trace-ascii <file> Like --trace, but without hex output\n     --trace-time    Add time stamps to trace/verbose output\n     --unix-socket <path> Connect through this Unix domain socket\n -T, --upload-file <file> Transfer local FILE to destination\n     --url <url>     URL to work with\n -B, --use-ascii     Use ASCII/text transfer\n -u, --user <user:password> Server user and password\n -A, --user-agent <name> Send User-Agent <name> to server\n -v, --verbose       Make the operation more talkative\n -V, --version       Show version number and quit\n -w, --write-out <format> Use output FORMAT after completion\n     --xattr         Store metadata in extended file attributes\n\n[stderr]\n', 'time': None}
[ 2022-04-25T15:20:19     INFO ] Exit per user request
