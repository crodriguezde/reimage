[ 2022-04-25T15:28:02     INFO ] logging to applications insights
[ 2022-04-25T15:28:09     INFO ] [ resource_group_exists    ] True
[ 2022-04-25T15:28:09     INFO ] [ resource_group_get       ] {'additional_properties': {}, 'id': '/subscriptions/b698965a-1f53-45ec-8b81-58458d1b25f7/resourceGroups/VMSSReImageRun1SOUTHCENTRALUS', 'name': 'VMSSReImageRun1SOUTHCENTRALUS', 'type': 'Microsoft.Resources/resourceGroups', 'properties': <azure.mgmt.resource.resources.v2021_04_01.models._models_py3.ResourceGroupProperties object at 0x7f017d0a8ac0>, 'location': 'southcentralus', 'managed_by': None, 'tags': None}
[ 2022-04-25T15:28:11     INFO ] [ storage_account_create   ] {'additional_properties': {}, 'id': '/subscriptions/b698965a-1f53-45ec-8b81-58458d1b25f7/resourceGroups/VMSSReImageRun1SOUTHCENTRALUS/providers/Microsoft.Storage/storageAccounts/vmsspipeline9fc2a6bc', 'name': 'vmsspipeline9fc2a6bc', 'type': 'Microsoft.Storage/storageAccounts', 'tags': {'confidentiality': 'public'}, 'location': 'southcentralus', 'sku': <azure.mgmt.storage.v2021_09_01.models._models_py3.Sku object at 0x7f017cede6a0>, 'kind': 'StorageV2', 'identity': None, 'extended_location': None, 'provisioning_state': 'Succeeded', 'primary_endpoints': <azure.mgmt.storage.v2021_09_01.models._models_py3.Endpoints object at 0x7f017cede4c0>, 'primary_location': 'southcentralus', 'status_of_primary': 'available', 'last_geo_failover_time': None, 'secondary_location': None, 'status_of_secondary': None, 'creation_time': datetime.datetime(2022, 4, 25, 19, 24, 0, 17796, tzinfo=<isodate.tzinfo.Utc object at 0x7f017ffb7a00>), 'custom_domain': None, 'sas_policy': None, 'key_policy': None, 'key_creation_time': <azure.mgmt.storage.v2021_09_01.models._models_py3.KeyCreationTime object at 0x7f017cede460>, 'secondary_endpoints': None, 'encryption': <azure.mgmt.storage.v2021_09_01.models._models_py3.Encryption object at 0x7f017cedebe0>, 'access_tier': 'Hot', 'azure_files_identity_based_authentication': None, 'enable_https_traffic_only': True, 'network_rule_set': <azure.mgmt.storage.v2021_09_01.models._models_py3.NetworkRuleSet object at 0x7f017cede7c0>, 'is_sftp_enabled': None, 'is_local_user_enabled': None, 'is_hns_enabled': None, 'geo_replication_stats': None, 'failover_in_progress': None, 'large_file_shares_state': None, 'private_endpoint_connections': [], 'routing_preference': None, 'blob_restore_status': None, 'allow_blob_public_access': True, 'minimum_tls_version': 'TLS1_0', 'allow_shared_key_access': None, 'enable_nfs_v3': None, 'allow_cross_tenant_replication': None, 'default_to_o_auth_authentication': None, 'public_network_access': None, 'immutable_storage_with_versioning': None, 'allowed_copy_scope': None, 'storage_account_sku_conversion_status': None, 'dns_endpoint_type': None}
[ 2022-04-25T15:28:12     INFO ] [ network_security_group_get ] {'additional_properties': {}, 'id': '/subscriptions/b698965a-1f53-45ec-8b81-58458d1b25f7/resourceGroups/VMSSReImageRun1SOUTHCENTRALUS/providers/Microsoft.Network/networkSecurityGroups/vmssPipeline-nsg', 'name': 'vmssPipeline-nsg', 'type': 'Microsoft.Network/networkSecurityGroups', 'location': 'southcentralus', 'tags': {'confidentiality': 'public'}, 'etag': 'W/"269f4d2e-2e3a-4ed2-8efc-473fede06572"', 'security_rules': [<azure.mgmt.network.v2021_05_01.models._models_py3.SecurityRule object at 0x7f017c8a8730>], 'default_security_rules': [<azure.mgmt.network.v2021_05_01.models._models_py3.SecurityRule object at 0x7f017c8a8610>, <azure.mgmt.network.v2021_05_01.models._models_py3.SecurityRule object at 0x7f017c8a8850>, <azure.mgmt.network.v2021_05_01.models._models_py3.SecurityRule object at 0x7f017c8a8880>, <azure.mgmt.network.v2021_05_01.models._models_py3.SecurityRule object at 0x7f017c8a88b0>, <azure.mgmt.network.v2021_05_01.models._models_py3.SecurityRule object at 0x7f017c8a88e0>, <azure.mgmt.network.v2021_05_01.models._models_py3.SecurityRule object at 0x7f017c8a8910>], 'network_interfaces': None, 'subnets': [<azure.mgmt.network.v2021_05_01.models._models_py3.Subnet object at 0x7f017c8a8970>], 'flow_logs': None, 'resource_guid': 'b572cc61-5074-4eed-9606-418d2c961519', 'provisioning_state': 'Succeeded'}
[ 2022-04-25T15:28:12     INFO ] [ vnet_get                 ] {'additional_properties': {}, 'id': '/subscriptions/b698965a-1f53-45ec-8b81-58458d1b25f7/resourceGroups/VMSSReImageRun1SOUTHCENTRALUS/providers/Microsoft.Network/virtualNetworks/vmssPipeline-vnet', 'name': 'vmssPipeline-vnet', 'type': 'Microsoft.Network/virtualNetworks', 'location': 'southcentralus', 'tags': {'confidentiality': 'public'}, 'extended_location': None, 'etag': 'W/"15c2e556-3bb1-45fb-8f41-66c6e168d3b6"', 'address_space': <azure.mgmt.network.v2021_05_01.models._models_py3.AddressSpace object at 0x7f017c8a8ac0>, 'dhcp_options': None, 'flow_timeout_in_minutes': None, 'subnets': [<azure.mgmt.network.v2021_05_01.models._models_py3.Subnet object at 0x7f017c8a8bb0>], 'virtual_network_peerings': [], 'resource_guid': 'd416ceab-7f08-46cd-b438-5d8a629cb0bd', 'provisioning_state': 'Succeeded', 'enable_ddos_protection': False, 'enable_vm_protection': None, 'ddos_protection_plan': None, 'bgp_communities': None, 'encryption': None, 'ip_allocations': None}
[ 2022-04-25T15:28:12     INFO ] [ subnets_list             ] <iterator object azure.core.paging.ItemPaged at 0x7f017ced4190>
[ 2022-04-25T15:28:14     INFO ] [ vmss_get                 ] {'additional_properties': {}, 'id': '/subscriptions/b698965a-1f53-45ec-8b81-58458d1b25f7/resourceGroups/VMSSReImageRun1SOUTHCENTRALUS/providers/Microsoft.Compute/virtualMachineScaleSets/vmssPipeline', 'name': 'vmssPipeline', 'type': 'Microsoft.Compute/virtualMachineScaleSets', 'location': 'southcentralus', 'tags': {'confidentiality': 'public'}, 'sku': <azure.mgmt.compute.v2021_11_01.models._models_py3.Sku object at 0x7f017c56ef70>, 'plan': None, 'identity': None, 'zones': ['1'], 'extended_location': None, 'upgrade_policy': None, 'automatic_repairs_policy': None, 'virtual_machine_profile': <azure.mgmt.compute.v2021_11_01.models._models_py3.VirtualMachineScaleSetVMProfile object at 0x7f017c5804c0>, 'provisioning_state': 'Succeeded', 'overprovision': None, 'do_not_run_extensions_on_overprovisioned_v_ms': None, 'unique_id': '7975f358-73fa-4f0e-9118-9cdb3108b7ee', 'single_placement_group': False, 'zone_balance': None, 'platform_fault_domain_count': 1, 'proximity_placement_group': None, 'host_group': None, 'additional_capabilities': None, 'scale_in_policy': None, 'orchestration_mode': 'Flexible', 'spot_restore_policy': None, 'time_created': datetime.datetime(2022, 4, 25, 19, 27, 51, 241598, tzinfo=<FixedOffset '+00:00'>)}
[ 2022-04-25T15:28:14     INFO ] [ vmss_get_vms             ] <iterator object azure.core.paging.ItemPaged at 0x7f017c56ea30>
[ 2022-04-25T15:28:45     INFO ] [ imds_get_subfd           ] {'additional_properties': {}, 'value': [<azure.mgmt.compute.v2021_11_01.models._models_py3.InstanceViewStatus object at 0x7f017ced4850>]}
[ 2022-04-25T15:28:45     INFO ] {'additional_properties': {}, 'code': 'ProvisioningState/succeeded', 'level': 'Info', 'display_status': 'Provisioning succeeded', 'message': 'Enable succeeded: \n[stdout]\n\n[stderr]\njq - commandline JSON processor [version 1.5-1-a5b5cbe]\nUsage: jq [options] <jq filter> [file...]\n\n\tjq is a tool for processing JSON inputs, applying the\n\tgiven filter to its JSON text inputs and producing the\n\tfilter\'s results as JSON on standard output.\n\tThe simplest filter is ., which is the identity filter,\n\tcopying jq\'s input to its output unmodified (except for\n\tformatting).\n\tFor more advanced filters see the jq(1) manpage ("man jq")\n\tand/or https://stedolan.github.io/jq\n\n\tSome of the options include:\n\t -c\t\tcompact instead of pretty-printed output;\n\t -n\t\tuse `null` as the single input value;\n\t -e\t\tset the exit status code based on the output;\n\t -s\t\tread (slurp) all inputs into an array; apply filter to it;\n\t -r\t\toutput raw strings, not JSON texts;\n\t -R\t\tread raw strings, not JSON texts;\n\t -C\t\tcolorize JSON;\n\t -M\t\tmonochrome (don\'t colorize JSON);\n\t -S\t\tsort keys of objects on output;\n\t --tab\tuse tabs for indentation;\n\t --arg a v\tset variable $a to value <v>;\n\t --argjson a v\tset variable $a to JSON value <v>;\n\t --slurpfile a f\tset variable $a to an array of JSON texts read from <f>;\n\tSee the manpage for more options.\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n\r  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0\r100  3175  100  3175    0     0   238k      0 --:--:-- --:--:-- --:--:--  238k\n(23) Failed writing body\n', 'time': None}
[ 2022-04-25T15:29:16     INFO ] [ imds_get_subfd           ] {'additional_properties': {}, 'value': [<azure.mgmt.compute.v2021_11_01.models._models_py3.InstanceViewStatus object at 0x7f017c58c850>]}
[ 2022-04-25T15:29:16     INFO ] {'additional_properties': {}, 'code': 'ProvisioningState/succeeded', 'level': 'Info', 'display_status': 'Provisioning succeeded', 'message': 'Enable succeeded: \n[stdout]\n\n[stderr]\njq - commandline JSON processor [version 1.5-1-a5b5cbe]\nUsage: jq [options] <jq filter> [file...]\n\n\tjq is a tool for processing JSON inputs, applying the\n\tgiven filter to its JSON text inputs and producing the\n\tfilter\'s results as JSON on standard output.\n\tThe simplest filter is ., which is the identity filter,\n\tcopying jq\'s input to its output unmodified (except for\n\tformatting).\n\tFor more advanced filters see the jq(1) manpage ("man jq")\n\tand/or https://stedolan.github.io/jq\n\n\tSome of the options include:\n\t -c\t\tcompact instead of pretty-printed output;\n\t -n\t\tuse `null` as the single input value;\n\t -e\t\tset the exit status code based on the output;\n\t -s\t\tread (slurp) all inputs into an array; apply filter to it;\n\t -r\t\toutput raw strings, not JSON texts;\n\t -R\t\tread raw strings, not JSON texts;\n\t -C\t\tcolorize JSON;\n\t -M\t\tmonochrome (don\'t colorize JSON);\n\t -S\t\tsort keys of objects on output;\n\t --tab\tuse tabs for indentation;\n\t --arg a v\tset variable $a to value <v>;\n\t --argjson a v\tset variable $a to JSON value <v>;\n\t --slurpfile a f\tset variable $a to an array of JSON texts read from <f>;\n\tSee the manpage for more options.\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n\r  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0\r100  3175  100  3175    0     0   221k      0 --:--:-- --:--:-- --:--:--  206k\r100  3175  100  3175    0     0   221k      0 --:--:-- --:--:-- --:--:--  206k\n(23) Failed writing body\n', 'time': None}
[ 2022-04-25T15:30:18     INFO ] [ imds_get_subfd           ] {'additional_properties': {}, 'value': [<azure.mgmt.compute.v2021_11_01.models._models_py3.InstanceViewStatus object at 0x7f017c58cfa0>]}
[ 2022-04-25T15:30:18     INFO ] {'additional_properties': {}, 'code': 'ProvisioningState/succeeded', 'level': 'Info', 'display_status': 'Provisioning succeeded', 'message': 'Enable succeeded: \n[stdout]\nSelecting previously unselected package libonig4:amd64.\r\n(Reading database ... \r(Reading database ... 5%\r(Reading database ... 10%\r(Reading database ... 15%\r(Reading database ... 20%\r(Reading database ... 25%\r(Reading database ... 30%\r(Reading database ... 35%\r(Reading database ... 40%\r(Reading database ... 45%\r(Reading database ... 50%\r(Reading database ... 55%\r(Reading database ... 60%\r(Reading database ... 65%\r(Reading database ... 70%\r(Reading database ... 75%\r(Reading database ... 80%\r(Reading database ... 85%\r(Reading database ... 90%\r(Reading database ... 95%\r(Reading database ... 100%\r(Reading database ... 77066 files and directories currently installed.)\r\nPreparing to unpack .../libonig4_6.7.0-1_amd64.deb ...\r\nUnpacking libonig4:amd64 (6.7.0-1) ...\r\nSelecting previously unselected package libjq1:amd64.\r\nPreparing to unpack .../libjq1_1.5+dfsg-2_amd64.deb ...\r\nUnpacking libjq1:amd64 (1.5+dfsg-2) ...\r\nSelecting previously unselected package jq.\r\nPreparing to unpack .../jq_1.5+dfsg-2_amd64.deb ...\r\nUnpacking jq (1.5+dfsg-2) ...\r\nSetting up libonig4:amd64 (6.7.0-1) ...\r\nSetting up libjq1:amd64 (1.5+dfsg-2) ...\r\nSetting up jq (1.5+dfsg-2) ...\r\nProcessing triggers for man-db (2.8.3-2ubuntu0.1) ...\r\nProcessing triggers for libc-bin (2.27-3ubuntu1.5) ...\r\n\n[stderr]\njq - commandline JSON processor [version 1.5-1-a5b5cbe]\nUsage: jq [options] <jq filter> [file...]\n\n\tjq is a tool for processing JSON inputs, applying the\n\tgiven filter to its JSON text inputs and producing the\n\tfilter\'s results as JSON on standard output.\n\tThe simplest filter is ., which is the identity filter,\n\tcopying jq\'s input to its output unmodified (except for\n\tformatting).\n\tFor more advanced filters see the jq(1) manpage ("man jq")\n\tand/or https://stedolan.github.io/jq\n\n\tSome of the options include:\n\t -c\t\tcompact instead of pretty-printed output;\n\t -n\t\tuse `null` as the single input value;\n\t -e\t\tset the exit status code based on the output;\n\t -s\t\tread (slurp) all inputs into an array; apply filter to it;\n\t -r\t\toutput raw strings, not JSON texts;\n\t -R\t\tread raw strings, not JSON texts;\n\t -C\t\tcolorize JSON;\n\t -M\t\tmonochrome (don\'t colorize JSON);\n\t -S\t\tsort keys of objects on output;\n\t --tab\tuse tabs for indentation;\n\t --arg a v\tset variable $a to value <v>;\n\t --argjson a v\tset variable $a to JSON value <v>;\n\t --slurpfile a f\tset variable $a to an array of JSON texts read from <f>;\n\tSee the manpage for more options.\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n\r  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0\r100  3175  100  3175    0     0   281k      0 --:--:-- --:--:-- --:--:--  281k\n(23) Failed writing body\n', 'time': None}
[ 2022-04-25T15:30:49     INFO ] Exit per user request
